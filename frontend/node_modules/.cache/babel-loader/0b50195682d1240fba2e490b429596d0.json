{"ast":null,"code":"import _slicedToArray from \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\New-Front-Dec\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/slicedToArray\";\nimport _asyncToGenerator from \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\New-Front-Dec\\\\frontend\\\\node_modules\\\\babel-preset-react-app\\\\node_modules\\\\@babel\\\\runtime/helpers/esm/asyncToGenerator\";\nvar _jsxFileName = \"C:\\\\Users\\\\user\\\\OneDrive\\\\Desktop\\\\New-Front-Dec\\\\frontend\\\\src\\\\page\\\\page-com\\\\graphfarmer.js\";\nfunction _regeneratorRuntime() { \"use strict\"; /*! regenerator-runtime -- Copyright (c) 2014-present, Facebook, Inc. -- license (MIT): https://github.com/facebook/regenerator/blob/main/LICENSE */ _regeneratorRuntime = function _regeneratorRuntime() { return exports; }; var exports = {}, Op = Object.prototype, hasOwn = Op.hasOwnProperty, defineProperty = Object.defineProperty || function (obj, key, desc) { obj[key] = desc.value; }, $Symbol = \"function\" == typeof Symbol ? Symbol : {}, iteratorSymbol = $Symbol.iterator || \"@@iterator\", asyncIteratorSymbol = $Symbol.asyncIterator || \"@@asyncIterator\", toStringTagSymbol = $Symbol.toStringTag || \"@@toStringTag\"; function define(obj, key, value) { return Object.defineProperty(obj, key, { value: value, enumerable: !0, configurable: !0, writable: !0 }), obj[key]; } try { define({}, \"\"); } catch (err) { define = function define(obj, key, value) { return obj[key] = value; }; } function wrap(innerFn, outerFn, self, tryLocsList) { var protoGenerator = outerFn && outerFn.prototype instanceof Generator ? outerFn : Generator, generator = Object.create(protoGenerator.prototype), context = new Context(tryLocsList || []); return defineProperty(generator, \"_invoke\", { value: makeInvokeMethod(innerFn, self, context) }), generator; } function tryCatch(fn, obj, arg) { try { return { type: \"normal\", arg: fn.call(obj, arg) }; } catch (err) { return { type: \"throw\", arg: err }; } } exports.wrap = wrap; var ContinueSentinel = {}; function Generator() {} function GeneratorFunction() {} function GeneratorFunctionPrototype() {} var IteratorPrototype = {}; define(IteratorPrototype, iteratorSymbol, function () { return this; }); var getProto = Object.getPrototypeOf, NativeIteratorPrototype = getProto && getProto(getProto(values([]))); NativeIteratorPrototype && NativeIteratorPrototype !== Op && hasOwn.call(NativeIteratorPrototype, iteratorSymbol) && (IteratorPrototype = NativeIteratorPrototype); var Gp = GeneratorFunctionPrototype.prototype = Generator.prototype = Object.create(IteratorPrototype); function defineIteratorMethods(prototype) { [\"next\", \"throw\", \"return\"].forEach(function (method) { define(prototype, method, function (arg) { return this._invoke(method, arg); }); }); } function AsyncIterator(generator, PromiseImpl) { function invoke(method, arg, resolve, reject) { var record = tryCatch(generator[method], generator, arg); if (\"throw\" !== record.type) { var result = record.arg, value = result.value; return value && \"object\" == typeof value && hasOwn.call(value, \"__await\") ? PromiseImpl.resolve(value.__await).then(function (value) { invoke(\"next\", value, resolve, reject); }, function (err) { invoke(\"throw\", err, resolve, reject); }) : PromiseImpl.resolve(value).then(function (unwrapped) { result.value = unwrapped, resolve(result); }, function (error) { return invoke(\"throw\", error, resolve, reject); }); } reject(record.arg); } var previousPromise; defineProperty(this, \"_invoke\", { value: function value(method, arg) { function callInvokeWithMethodAndArg() { return new PromiseImpl(function (resolve, reject) { invoke(method, arg, resolve, reject); }); } return previousPromise = previousPromise ? previousPromise.then(callInvokeWithMethodAndArg, callInvokeWithMethodAndArg) : callInvokeWithMethodAndArg(); } }); } function makeInvokeMethod(innerFn, self, context) { var state = \"suspendedStart\"; return function (method, arg) { if (\"executing\" === state) throw new Error(\"Generator is already running\"); if (\"completed\" === state) { if (\"throw\" === method) throw arg; return doneResult(); } for (context.method = method, context.arg = arg;;) { var delegate = context.delegate; if (delegate) { var delegateResult = maybeInvokeDelegate(delegate, context); if (delegateResult) { if (delegateResult === ContinueSentinel) continue; return delegateResult; } } if (\"next\" === context.method) context.sent = context._sent = context.arg;else if (\"throw\" === context.method) { if (\"suspendedStart\" === state) throw state = \"completed\", context.arg; context.dispatchException(context.arg); } else \"return\" === context.method && context.abrupt(\"return\", context.arg); state = \"executing\"; var record = tryCatch(innerFn, self, context); if (\"normal\" === record.type) { if (state = context.done ? \"completed\" : \"suspendedYield\", record.arg === ContinueSentinel) continue; return { value: record.arg, done: context.done }; } \"throw\" === record.type && (state = \"completed\", context.method = \"throw\", context.arg = record.arg); } }; } function maybeInvokeDelegate(delegate, context) { var methodName = context.method, method = delegate.iterator[methodName]; if (undefined === method) return context.delegate = null, \"throw\" === methodName && delegate.iterator.return && (context.method = \"return\", context.arg = undefined, maybeInvokeDelegate(delegate, context), \"throw\" === context.method) || \"return\" !== methodName && (context.method = \"throw\", context.arg = new TypeError(\"The iterator does not provide a '\" + methodName + \"' method\")), ContinueSentinel; var record = tryCatch(method, delegate.iterator, context.arg); if (\"throw\" === record.type) return context.method = \"throw\", context.arg = record.arg, context.delegate = null, ContinueSentinel; var info = record.arg; return info ? info.done ? (context[delegate.resultName] = info.value, context.next = delegate.nextLoc, \"return\" !== context.method && (context.method = \"next\", context.arg = undefined), context.delegate = null, ContinueSentinel) : info : (context.method = \"throw\", context.arg = new TypeError(\"iterator result is not an object\"), context.delegate = null, ContinueSentinel); } function pushTryEntry(locs) { var entry = { tryLoc: locs[0] }; 1 in locs && (entry.catchLoc = locs[1]), 2 in locs && (entry.finallyLoc = locs[2], entry.afterLoc = locs[3]), this.tryEntries.push(entry); } function resetTryEntry(entry) { var record = entry.completion || {}; record.type = \"normal\", delete record.arg, entry.completion = record; } function Context(tryLocsList) { this.tryEntries = [{ tryLoc: \"root\" }], tryLocsList.forEach(pushTryEntry, this), this.reset(!0); } function values(iterable) { if (iterable) { var iteratorMethod = iterable[iteratorSymbol]; if (iteratorMethod) return iteratorMethod.call(iterable); if (\"function\" == typeof iterable.next) return iterable; if (!isNaN(iterable.length)) { var i = -1, next = function next() { for (; ++i < iterable.length;) if (hasOwn.call(iterable, i)) return next.value = iterable[i], next.done = !1, next; return next.value = undefined, next.done = !0, next; }; return next.next = next; } } return { next: doneResult }; } function doneResult() { return { value: undefined, done: !0 }; } return GeneratorFunction.prototype = GeneratorFunctionPrototype, defineProperty(Gp, \"constructor\", { value: GeneratorFunctionPrototype, configurable: !0 }), defineProperty(GeneratorFunctionPrototype, \"constructor\", { value: GeneratorFunction, configurable: !0 }), GeneratorFunction.displayName = define(GeneratorFunctionPrototype, toStringTagSymbol, \"GeneratorFunction\"), exports.isGeneratorFunction = function (genFun) { var ctor = \"function\" == typeof genFun && genFun.constructor; return !!ctor && (ctor === GeneratorFunction || \"GeneratorFunction\" === (ctor.displayName || ctor.name)); }, exports.mark = function (genFun) { return Object.setPrototypeOf ? Object.setPrototypeOf(genFun, GeneratorFunctionPrototype) : (genFun.__proto__ = GeneratorFunctionPrototype, define(genFun, toStringTagSymbol, \"GeneratorFunction\")), genFun.prototype = Object.create(Gp), genFun; }, exports.awrap = function (arg) { return { __await: arg }; }, defineIteratorMethods(AsyncIterator.prototype), define(AsyncIterator.prototype, asyncIteratorSymbol, function () { return this; }), exports.AsyncIterator = AsyncIterator, exports.async = function (innerFn, outerFn, self, tryLocsList, PromiseImpl) { void 0 === PromiseImpl && (PromiseImpl = Promise); var iter = new AsyncIterator(wrap(innerFn, outerFn, self, tryLocsList), PromiseImpl); return exports.isGeneratorFunction(outerFn) ? iter : iter.next().then(function (result) { return result.done ? result.value : iter.next(); }); }, defineIteratorMethods(Gp), define(Gp, toStringTagSymbol, \"Generator\"), define(Gp, iteratorSymbol, function () { return this; }), define(Gp, \"toString\", function () { return \"[object Generator]\"; }), exports.keys = function (val) { var object = Object(val), keys = []; for (var key in object) keys.push(key); return keys.reverse(), function next() { for (; keys.length;) { var key = keys.pop(); if (key in object) return next.value = key, next.done = !1, next; } return next.done = !0, next; }; }, exports.values = values, Context.prototype = { constructor: Context, reset: function reset(skipTempReset) { if (this.prev = 0, this.next = 0, this.sent = this._sent = undefined, this.done = !1, this.delegate = null, this.method = \"next\", this.arg = undefined, this.tryEntries.forEach(resetTryEntry), !skipTempReset) for (var name in this) \"t\" === name.charAt(0) && hasOwn.call(this, name) && !isNaN(+name.slice(1)) && (this[name] = undefined); }, stop: function stop() { this.done = !0; var rootRecord = this.tryEntries[0].completion; if (\"throw\" === rootRecord.type) throw rootRecord.arg; return this.rval; }, dispatchException: function dispatchException(exception) { if (this.done) throw exception; var context = this; function handle(loc, caught) { return record.type = \"throw\", record.arg = exception, context.next = loc, caught && (context.method = \"next\", context.arg = undefined), !!caught; } for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i], record = entry.completion; if (\"root\" === entry.tryLoc) return handle(\"end\"); if (entry.tryLoc <= this.prev) { var hasCatch = hasOwn.call(entry, \"catchLoc\"), hasFinally = hasOwn.call(entry, \"finallyLoc\"); if (hasCatch && hasFinally) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } else if (hasCatch) { if (this.prev < entry.catchLoc) return handle(entry.catchLoc, !0); } else { if (!hasFinally) throw new Error(\"try statement without catch or finally\"); if (this.prev < entry.finallyLoc) return handle(entry.finallyLoc); } } } }, abrupt: function abrupt(type, arg) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc <= this.prev && hasOwn.call(entry, \"finallyLoc\") && this.prev < entry.finallyLoc) { var finallyEntry = entry; break; } } finallyEntry && (\"break\" === type || \"continue\" === type) && finallyEntry.tryLoc <= arg && arg <= finallyEntry.finallyLoc && (finallyEntry = null); var record = finallyEntry ? finallyEntry.completion : {}; return record.type = type, record.arg = arg, finallyEntry ? (this.method = \"next\", this.next = finallyEntry.finallyLoc, ContinueSentinel) : this.complete(record); }, complete: function complete(record, afterLoc) { if (\"throw\" === record.type) throw record.arg; return \"break\" === record.type || \"continue\" === record.type ? this.next = record.arg : \"return\" === record.type ? (this.rval = this.arg = record.arg, this.method = \"return\", this.next = \"end\") : \"normal\" === record.type && afterLoc && (this.next = afterLoc), ContinueSentinel; }, finish: function finish(finallyLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.finallyLoc === finallyLoc) return this.complete(entry.completion, entry.afterLoc), resetTryEntry(entry), ContinueSentinel; } }, catch: function _catch(tryLoc) { for (var i = this.tryEntries.length - 1; i >= 0; --i) { var entry = this.tryEntries[i]; if (entry.tryLoc === tryLoc) { var record = entry.completion; if (\"throw\" === record.type) { var thrown = record.arg; resetTryEntry(entry); } return thrown; } } throw new Error(\"illegal catch attempt\"); }, delegateYield: function delegateYield(iterable, resultName, nextLoc) { return this.delegate = { iterator: values(iterable), resultName: resultName, nextLoc: nextLoc }, \"next\" === this.method && (this.arg = undefined), ContinueSentinel; } }, exports; }\nimport React, { useState, useEffect } from 'react';\nimport { ResponsiveContainer, BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\nimport './graph.css';\nimport moment from 'moment';\n\n// const data = [\n//   { label: '09/2023', income: 3081 },\n//   { label: '10/2023',  predicter: 3201 },\n//   { label: '11/2023',  predicter: 3765 },\n//   { label: '12/2023',  predicter: 3205 },\n//   { label: '01/2024',  predicter: 2705 },\n//   { label: '02/2024',  predicter: 2402 },\n//   { label: '03/2024',  predicter: 2159 },\n//   { label: '04/2024',  predicter: 1634 },\n//   { label: '05/2024',  predicter: 1576 },\n//   { label: '06/2024',  predicter: 1402 },\n// ];\nfunction sumArray(_x) {\n  return _sumArray.apply(this, arguments);\n}\nfunction _sumArray() {\n  _sumArray = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee2(arr) {\n    var ans, idx, milkData, response, result;\n    return _regeneratorRuntime().wrap(function _callee2$(_context2) {\n      while (1) switch (_context2.prev = _context2.next) {\n        case 0:\n          ans = new Array(305).fill(0);\n          idx = 0;\n        case 2:\n          if (!(idx < arr.length)) {\n            _context2.next = 14;\n            break;\n          }\n          milkData = arr[idx]; // console.log(milkData);\n          _context2.next = 6;\n          return fetch(\"../ai/predict_milk\", {\n            method: \"POST\",\n            headers: {\n              'Content-Type': 'application/json'\n            },\n            body: JSON.stringify({\n              \"data\": milkData\n            })\n          });\n        case 6:\n          response = _context2.sent;\n          _context2.next = 9;\n          return response.json();\n        case 9:\n          result = _context2.sent;\n          result.forEach(function (milkInDay, idx) {\n            ans[idx] += milkInDay;\n          });\n        case 11:\n          idx++;\n          _context2.next = 2;\n          break;\n        case 14:\n          return _context2.abrupt(\"return\", ans);\n        case 15:\n        case \"end\":\n          return _context2.stop();\n      }\n    }, _callee2);\n  }));\n  return _sumArray.apply(this, arguments);\n}\n;\nexport default function Graphfarmer() {\n  var _this = this;\n  var _useState = useState([]),\n    _useState2 = _slicedToArray(_useState, 2),\n    users = _useState2[0],\n    setUsers = _useState2[1];\n  var numCols = 305;\n  var colSums = new Array(numCols).fill(0);\n  var milkpercow;\n  var a = moment(\"08-01-23\", \"MM-DD-YY\").valueOf();\n  var b = moment.duration(a, 'milliseconds');\n  var starto = Math.floor(b.asDays());\n  var fetchUserData = function fetchUserData() {\n    fetch(\"../api/getMilkRecords/\") // iwing.cpe.ku.ac.th/pdairy/api/getMilkRecords/\n    .then( /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime().mark(function _callee(res) {\n        var arrmilk, _i, _i2, rower, dmy, mill, duration, coler, colSumsMonth, tmp, z, datagraph, i, monthsToAdd, startDate, targetDate, formattedDate, j, _startDate, _targetDate, _formattedDate;\n        return _regeneratorRuntime().wrap(function _callee$(_context) {\n          while (1) switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return res.json();\n            case 2:\n              milkpercow = _context.sent;\n              arrmilk = new Array(10); // Create an array with 10 rows\n              for (_i = 0; _i < 10; _i++) {\n                arrmilk[_i] = new Array(); // For each row, create an array with no initial columns\n              }\n              _i2 = 0;\n            case 6:\n              if (!(_i2 < milkpercow.length)) {\n                _context.next = 19;\n                break;\n              }\n              rower = milkpercow[_i2].cowID - 1;\n              if (!(rower >= 10 || rower < 0)) {\n                _context.next = 10;\n                break;\n              }\n              return _context.abrupt(\"continue\", 16);\n            case 10:\n              return _context.abrupt(\"continue\", 16);\n            case 16:\n              _i2++;\n              _context.next = 6;\n              break;\n            case 19:\n              console.table(arrmilk);\n\n              // arrmilk.forEach((milkData,idx) => {\n              _context.next = 22;\n              return sumArray(arrmilk);\n            case 22:\n              colSums = _context.sent;\n              colSumsMonth = new Array();\n              console.table(colSums);\n              tmp = 0;\n              for (z = 0; z < 305; z++) {\n                tmp += colSums[z];\n                if (z % 30 == 0 && z != 0) {\n                  colSumsMonth.push(tmp);\n                  tmp = 0;\n                }\n              }\n              console.log(colSumsMonth);\n              datagraph = new Array(10);\n              for (i = 0; i < 3; i++) {\n                monthsToAdd = i;\n                startDate = moment('2023-08', 'YYYY-MM');\n                targetDate = startDate.add(monthsToAdd, 'months');\n                formattedDate = targetDate.format('MM/YYYY');\n                datagraph[i] = {\n                  label: formattedDate,\n                  income: colSumsMonth[i] * 21.25\n                };\n              }\n              for (j = i; j < 10; j++) {\n                monthsToAdd = j;\n                _startDate = moment('2023-08', 'YYYY-MM');\n                _targetDate = _startDate.add(monthsToAdd, 'months');\n                _formattedDate = _targetDate.format('MM/YYYY');\n                datagraph[j] = {\n                  label: _formattedDate,\n                  predicter: colSumsMonth[j] * 21.25\n                };\n              }\n              console.log(datagraph);\n              setUsers(datagraph);\n            case 33:\n            case \"end\":\n              return _context.stop();\n          }\n        }, _callee);\n      }));\n      return function (_x2) {\n        return _ref.apply(this, arguments);\n      };\n    }());\n  };\n  useEffect(function () {\n    fetchUserData();\n  }, []);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"row\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"col-md-12\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 124,\n      columnNumber: 9\n    }\n  }), \"///\", /*#__PURE__*/React.createElement(\"div\", {\n    style: {\n      fontFamily: 'Athiti, sans-serif',\n      fontWeight: 'bold',\n      fontSize: '36px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 12\n    }\n  }, \"\\u0E01\\u0E23\\u0E32\\u0E1F\\u0E41\\u0E2A\\u0E14\\u0E07\\u0E23\\u0E32\\u0E22\\u0E44\\u0E14\\u0E49\\u0E15\\u0E48\\u0E2D\\u0E40\\u0E14\\u0E37\\u0E2D\\u0E19\"), /*#__PURE__*/React.createElement(\"h2\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section col-md-6\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-title\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }\n  }, \"Income (Bath)\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"section-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(ResponsiveContainer, {\n    width: \"100%\",\n    height: 300,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(BarChart, {\n    data: users,\n    margin: {\n      top: 15,\n      right: 15,\n      bottom: 15,\n      left: 0\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(XAxis, {\n    dataKey: \"label\",\n    fontSize: 12,\n    angle: -45,\n    textAnchor: \"end\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(YAxis, {\n    fontSize: 12,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(CartesianGrid, {\n    stroke: \"#ccc\",\n    strokeDasharray: \"5 5\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Tooltip, {\n    contentStyle: {\n      fontSize: '16px'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Legend, {\n    verticalAlign: \"top\",\n    iconSize: 12,\n    formatter: function formatter(value) {\n      return /*#__PURE__*/React.createElement(\"span\", {\n        style: {\n          fontSize: '20px'\n        },\n        __self: _this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 79\n        }\n      }, value);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"income\",\n    fill: \"#30BE96\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(Bar, {\n    dataKey: \"predicter\",\n    fill: \"#c7c8c9\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 15\n    }\n  }))))));\n}","map":{"version":3,"names":["_regeneratorRuntime","exports","Op","Object","prototype","hasOwn","hasOwnProperty","defineProperty","obj","key","desc","value","$Symbol","Symbol","iteratorSymbol","iterator","asyncIteratorSymbol","asyncIterator","toStringTagSymbol","toStringTag","define","enumerable","configurable","writable","err","wrap","innerFn","outerFn","self","tryLocsList","protoGenerator","Generator","generator","create","context","Context","makeInvokeMethod","tryCatch","fn","arg","type","call","ContinueSentinel","GeneratorFunction","GeneratorFunctionPrototype","IteratorPrototype","getProto","getPrototypeOf","NativeIteratorPrototype","values","Gp","defineIteratorMethods","forEach","method","_invoke","AsyncIterator","PromiseImpl","invoke","resolve","reject","record","result","__await","then","unwrapped","error","previousPromise","callInvokeWithMethodAndArg","state","Error","doneResult","delegate","delegateResult","maybeInvokeDelegate","sent","_sent","dispatchException","abrupt","done","methodName","undefined","return","TypeError","info","resultName","next","nextLoc","pushTryEntry","locs","entry","tryLoc","catchLoc","finallyLoc","afterLoc","tryEntries","push","resetTryEntry","completion","reset","iterable","iteratorMethod","isNaN","length","i","displayName","isGeneratorFunction","genFun","ctor","constructor","name","mark","setPrototypeOf","__proto__","awrap","async","Promise","iter","keys","val","object","reverse","pop","skipTempReset","prev","charAt","slice","stop","rootRecord","rval","exception","handle","loc","caught","hasCatch","hasFinally","finallyEntry","complete","finish","catch","_catch","thrown","delegateYield","React","useState","useEffect","ResponsiveContainer","BarChart","Bar","CartesianGrid","XAxis","YAxis","Tooltip","Legend","moment","sumArray","_x","_sumArray","apply","arguments","_asyncToGenerator","_callee2","arr","ans","idx","milkData","response","_callee2$","_context2","Array","fill","fetch","headers","body","JSON","stringify","json","milkInDay","Graphfarmer","_this","_useState","_useState2","_slicedToArray","users","setUsers","numCols","colSums","milkpercow","a","valueOf","b","duration","starto","Math","floor","asDays","fetchUserData","_ref","_callee","res","arrmilk","_i","_i2","rower","dmy","mill","coler","colSumsMonth","tmp","z","datagraph","monthsToAdd","startDate","targetDate","formattedDate","j","_startDate","_targetDate","_formattedDate","_callee$","_context","cowID","console","table","log","add","format","label","income","predicter","_x2","createElement","className","__self","__source","fileName","_jsxFileName","lineNumber","columnNumber","style","fontFamily","fontWeight","fontSize","width","height","data","margin","top","right","bottom","left","dataKey","angle","textAnchor","stroke","strokeDasharray","contentStyle","verticalAlign","iconSize","formatter"],"sources":["C:/Users/user/OneDrive/Desktop/New-Front-Dec/frontend/src/page/page-com/graphfarmer.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { ResponsiveContainer, BarChart, Bar, CartesianGrid, XAxis, YAxis, Tooltip, Legend } from 'recharts';\r\nimport './graph.css';\r\nimport moment from 'moment';\r\n\r\n// const data = [\r\n//   { label: '09/2023', income: 3081 },\r\n//   { label: '10/2023',  predicter: 3201 },\r\n//   { label: '11/2023',  predicter: 3765 },\r\n//   { label: '12/2023',  predicter: 3205 },\r\n//   { label: '01/2024',  predicter: 2705 },\r\n//   { label: '02/2024',  predicter: 2402 },\r\n//   { label: '03/2024',  predicter: 2159 },\r\n//   { label: '04/2024',  predicter: 1634 },\r\n//   { label: '05/2024',  predicter: 1576 },\r\n//   { label: '06/2024',  predicter: 1402 },\r\n// ];\r\n\r\nasync function sumArray(arr){\r\n  let ans = new Array(305).fill(0);\r\n  for(let idx = 0; idx < arr.length; idx ++){\r\n    let milkData = arr[idx];\r\n    // console.log(milkData);\r\n    const response = await fetch(\"../ai/predict_milk\", {\r\n      method: \"POST\",\r\n      headers: {\r\n        'Content-Type': 'application/json',\r\n      },\r\n      body: JSON.stringify({\r\n        \"data\": milkData,\r\n      }),\r\n    })\r\n    const result = await response.json();\r\n    result.forEach((milkInDay, idx) => {\r\n      ans[idx]+=milkInDay;\r\n    });\r\n  }\r\n  return ans;\r\n};\r\n\r\nexport default function Graphfarmer() {\r\n  const [users, setUsers] = useState([]);\r\n  const numCols = 305;\r\n  let colSums = new Array(numCols).fill(0);\r\n  let milkpercow;\r\n\r\n  let a = moment(\"08-01-23\", \"MM-DD-YY\").valueOf();\r\n  let b = moment.duration(a, 'milliseconds');\r\n  let starto = Math.floor(b.asDays());\r\n\r\n  const fetchUserData = () => {\r\n    fetch(\"../api/getMilkRecords/\") // iwing.cpe.ku.ac.th/pdairy/api/getMilkRecords/\r\n      .then(async (res) => {\r\n        milkpercow = await res.json();\r\n        const arrmilk = new Array(10); // Create an array with 10 rows\r\n        for (let i = 0; i < 10; i++) {\r\n          arrmilk[i] = new Array(); // For each row, create an array with no initial columns\r\n        }\r\n        for (let i = 0; i < milkpercow.length; i++) {\r\n          let rower = milkpercow[i].cowID-1;\r\n          if(rower>=10 || rower<0 )\r\n            continue;\r\n          // if(milkpercow[i].ID < 1402 || milkpercow[i].ID > 2202) // || milkpercow[i].ID > 351 \r\n            continue;\r\n          const dmy = moment(milkpercow[i].timestamp).format(\"MM-DD-YY\");\r\n          let mill = moment(dmy, \"MM-DD-YY\").valueOf();\r\n          let duration = moment.duration(mill, 'milliseconds');\r\n          let coler = Math.floor(duration.asDays()) - starto + 1;\r\n          // console.log('c',coler);\r\n          arrmilk[rower][coler - 1] = milkpercow[i].weight;\r\n        }\r\n        console.table(arrmilk);\r\n\r\n        // arrmilk.forEach((milkData,idx) => {\r\n        colSums = await sumArray(arrmilk);\r\n        let colSumsMonth = new Array();\r\n        console.table(colSums);\r\n        let tmp=0;\r\n        let z;\r\n        for(z=0;z<305;z++){\r\n          tmp+=colSums[z];\r\n          if(z%30==0 && z!=0){\r\n            colSumsMonth.push(tmp);\r\n            tmp=0;\r\n          }\r\n        }\r\n        console.log(colSumsMonth);\r\n        let datagraph = new Array(10);\r\n        let i;\r\n        let monthsToAdd;\r\n        for(i=0;i<3;i++){\r\n          monthsToAdd = i;\r\n          let startDate = moment('2023-08', 'YYYY-MM');\r\n          let targetDate = startDate.add(monthsToAdd, 'months');\r\n          let formattedDate = targetDate.format('MM/YYYY');\r\n\r\n          datagraph[i]={\r\n            label: formattedDate,\r\n            income: colSumsMonth[i]*21.25,\r\n          };\r\n        }\r\n        for(let j=i;j<10;j++){\r\n          monthsToAdd = j;\r\n          let startDate = moment('2023-08', 'YYYY-MM');\r\n          let targetDate = startDate.add(monthsToAdd, 'months');\r\n          let formattedDate = targetDate.format('MM/YYYY');\r\n          datagraph[j]={\r\n            label: formattedDate,\r\n            predicter: colSumsMonth[j]*21.25,\r\n          }\r\n        }\r\n        console.log(datagraph);\r\n        setUsers(datagraph);\r\n      });\r\n  };\r\n\r\n  useEffect(() => {\r\n    fetchUserData();\r\n  }, []);\r\n\r\n  return (\r\n    <div className=\"row\">\r\n      <div className=\"col-md-12\">\r\n        <h1></h1>\r\n        ///<div style={{ fontFamily: 'Athiti, sans-serif', fontWeight: 'bold', fontSize: '36px' }}>กราฟแสดงรายได้ต่อเดือน</div>\r\n        <h2></h2>\r\n      </div>\r\n      <div className=\"section col-md-6\">\r\n        <div className=\"section-title\">Income (Bath)</div>\r\n        <div className=\"section-content\">\r\n          <ResponsiveContainer width=\"100%\" height={300}>\r\n            <BarChart data={users} margin={{ top: 15, right: 15, bottom: 15, left: 0 }}>\r\n            <XAxis dataKey=\"label\" fontSize={12} angle={-45} textAnchor=\"end\"/>\r\n            <YAxis fontSize={12}/>\r\n              <CartesianGrid stroke=\"#ccc\" strokeDasharray=\"5 5\" />\r\n              <Tooltip contentStyle={{ fontSize: '16px' }}/>\r\n              <Legend verticalAlign=\"top\" iconSize={12} formatter={(value) => <span style={{ fontSize: '20px' }}>{value}</span>} />\r\n              <Bar dataKey=\"income\" fill=\"#30BE96\" />\r\n              <Bar dataKey=\"predicter\" fill=\"#c7c8c9\" />\r\n            </BarChart>\r\n          </ResponsiveContainer>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}